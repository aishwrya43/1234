                                            ASSIGNMENT 2
===========================================================
Practice 1
	
•	Write a PL/SQL block that takes a department number from a user and increases the salary of all the employees belonging to the department by 10%. The block should display on the screen how many records are updated.

Solution:

declare
dept number:=&num1;
 
begin
      
      update emp set sal=sal+0.1*sal where deptno=dept;
      if SQL%found then
      dbms_output.put_line('record updated no of rows=' ||SQL%rowcount);
       else
      dbms_output.put_line('record not updated');
      end if;
end;
/

===========================================================
Practice 2

•	Write a PL/SQL block to display the employee first name, salary and JOB_TITLE for the first five employees recorded in the “employees” table by making use of :
•	Simple for loop with “EXIT WHEN” condition
•	The “WHILE” condition
•	Cursor FOR LOOP 

Solution:
 -------------exit when condition-------------------------------------------
declare
      cursor c_emp is select ename, sal, job from emp;
      v_emp c_emp%rowtype;
      i number:=1;
begin
      open c_emp;
loop
      fetch c_emp into v_emp;
      exit when (i=6);
      dbms_output.put_line('employee name is= '||v_emp.ename|| 'salary is ='|| v_emp.sal||'job is=' ||v_emp.job);
       i:=i+1;
end loop;
       close c_emp;
end;
/

---------------while condition--------------------------------------------------------
declare
    cursor c_emp is select ename, sal, job from emp;
    v_emp c_emp%rowtype;
    i number:=1;
begin
   open c_emp;
   while (i<=5)
loop
     fetch c_emp into v_emp;
     
     dbms_output.put_line('employee name is= '||v_emp.ename|| 'salary is ='|| v_emp.sal||'job is=' ||v_emp.job);
      i:=i+1;
end loop;
       close c_emp;
end;
/
---------------for loop---------------------------------------------------------------------------
declare
    cursor c_emp is select ename, sal, job from emp;
    v_emp c_emp%rowtype;
begin
    open c_emp;
    for c in 1..5
loop
    fetch c_emp into v_emp;
     dbms_output.put_line('employee name is= '||v_emp.ename|| 'salary is ='|| v_emp.sal||'job is=' ||v_emp.job);
end loop;
     close c_emp;
end;
/
==========================================================
Practice 3

•	Write a PL/SQL block that displays names and salaries of all “Programmer” recorded in the employees table by making use of a cursor.

Solution:

declare
	cursor c_emp is select * from emp where job='MANAGER';
	v_emp c_emp%rowtype;

begin
	open c_emp;
	loop
		fetch c_emp into v_emp;
		exit when c_emp%notfound;
		dbms_output.put_line('Ename is '||v_emp.ename||' salary is '||v_emp.sal||' job is '||v_emp.job);
	end loop;
	close c_emp;
end;
/

===========================================================
Practice 4

•	Write a PL/SQL block that accepts a value of a job_id from user and displays the full names, department numbers and salaries of the employees from the “employees” table having that job. The block makes use of a parameterized cursor. The user input is passed on to the cursor as a parameter. 

Solution:

declare
        v_job emp.job%type:='&empjob';
        cursor c_emp is select * from emp where lower(job) like v_job;
        v_emp c_emp%rowtype;
begin
        open c_emp;
loop
       fetch c_emp into v_emp;
       exit when c_emp%notfound;
       dbms_output.put_line('Ename is '||v_emp.ename||' salary is '||v_emp.sal||' job is '||v_emp.job||'dept no is= '||v_emp.deptno);
end loop;
        close c_emp;
end;
/
===========================================================
 Practice 5

•	Write a PL/SQL block that updates the salaries of the employees as per the following rules. 
•	If the job is SH_CLERKand department_id is 10 then increase the salary by 20%
•	If the job is ST_MAN and department_id is 20 then increase the salary by 5%
•	For all the other cases increase the salary by 10%
The block makes use of a cursor for performing the updates and ensures that the appropriate locks are taken on the data retrieved by the cursor, as the data is to be updated.

Solution:  (check)

declare
	cursor c_employees is select * from employees for update;

begin
	for v_employees in c_employees
	loop
	if (v_employees.department_id = 10 and v_employees.job_id='SH-CLERK') then
	update employees set salary=((salary*120)/100) where current of c_employees;
	elsif (v_employees.department_id = 20 and v_employees.job_id='ST-MAN') then
		update employees set salary=((salary*105)/100) where current of c_employees;
	else
		update employees set salary=((salary*110)/100) where current of c_employees;
	end if;
	end loop;
end;
/

===========================================================
Practice 6

•	Write a PL/SQL block that retrieves information from the “department” and “employees” table and displays it in the following format

Department ID :10		Department Name : XXXX
________________________________________________________
EMPLOYEE NUMBER 	 EMPLOYEE FULL NAME	SALARY  	JOB

XXXXXX		XXXXXX			XXXX		XXXXX
XXXXXX		XXXXXX			XXXX		XXXXX
.........

Department ID : 20		Department Name : XXXX
________________________________________________________
EMPLOYEE NUMBER 	 EMPLOYEE FULL NAME	SALARY  	JOB

XXXXXX		XXXXXX			XXXX		XXXXX
XXXXXX		XXXXXX			XXXX		XXXXX

Solution:

declare
     cursor c_dept is select * from dept;
     cursor c_emp(p_dept number) is select * from emp where deptno= p_dept;
begin
     for v_dept in c_dept
loop
    dbms_output.put_line(v_dept.deptno||'    '||v_dept.dname||'    ');
    for v_emp in c_emp(v_dept.deptno)
loop
     dbms_output.put_line(v_emp.empno||'    '|| v_emp.ename||'    '||v_emp.sal||'    '||v_emp.job);
end loop;
end loop;
end;
/
 
						

    



   
       

       
