                                              ASSIGNMENT 6
=========================================================
Practice 1

•	Create a user defined data type named “MARKS_TYPE” having the following subfields

Column	Data type and size
Subject	VARCHAR 2 (25)
midTermMarks	NUMBER (3)
annualMarks	NUMBER(3)


•	Create an object table with name “MYMARKS” having a single column of type MARKS_TYPE.
•	Insert any 3 records in the table with relevant data
•	Fire an appropriate SELECT command to get midTermMarks and annualMarks for all records for the given subject

Solution:

create or replace type marks_type as object
(subject varchar2(25),
 midtermmarks number(3),
 annualmarks number(3));


create table mymarks(mymarks marks_type );

insert into mymarks values(marks_type ('maths' , 100,100));

insert into mymarks values(marks_type ('english' , 97,100));

insert into mymarks values(marks_type ('science', 99, 150));

select m.mymarks.midtermmarks,m.mymarks.annualmarks,m.mymarks.subject  from mymarks m where m.mymarks.subject='maths'   ;



=========================================================   
 Practice 2

•Create table “students” having the following design

Column	            Data type and size	                 Constraint
studentName	VARCHAR 2 (25)	
rollNo	                   NUMBER (3)	                Primary Key
Score	                 MARKS_TYPE	

•Insert any 3 relevant records in the table.
•Fire an appropriate SELECT query to get the score of a student with the given rollNO
•Fire an appropriate command to increase the annualMarks of the student with given rollNo by five marks


Solution:

create or replace type MARKS_TYPE as object
( subject varchar2(25),
  midtermmarks number(3),
  annualmarks number(3));

create table students(student_name varchar2(25), roll_no number(3) primary key, score MARKS_TYPE );

insert into students values('aishwarya' ,140, MARKS_TYPE('maths',100,97));

 insert into students values('archana' ,143, MARKS_TYPE('science',100,99));

 insert into students values('rutu' ,144, MARKS_TYPE('english',150,144));

select s.score from students s where roll_no=140;

update students s  set s.score.annualmarks =(s.score.annualmarks + 5) where roll_no=140;

=====================================================================
Practice 3

•Create user defined data type named “ICECREAM_TYPE” with the following data members

Column	               Data type and size
flavorNo	               NUMBER(2)
Fname	               VARCHAR(10)
Cost	               NUMBER(3)
Hastopping              CHAR(1)   
                                 Can be Y or N

•Create table named “menu” with the following design and insert five records into it.

Column	        Data type and size	              Constraint
MenuNo	            NUMBER(2)	                             Primary key
mainCourse        VARCHAR2(15)	                              Not Null
Desert	         ICECREAM_TYPE	
Colddrink	            CHAR(6)	


•	Retrieve cost and name of an icecream from menu by specifying its flavor number.
•	Update cost and maincourse column  from menu by specifying its MenuNo.


Solution:

create or replace type ICECREAM_TYPE as object
(flavor_no number(2),
f_name varchar2(10),
cost number(3),
hastopping char(1));

 create table menu
(menu_no number(2) primary key, 
main_course varchar2(15) not null,
desert   ICECREAM_TYPE,
colddrink char(6)); 

insert into menu values(1, 'pavbhaji', ICECREAM_TYPE(1, 'mango',75,'y'),'coke');

insert into menu values(11, 'noodles', ICECREAM_TYPE(2, 'royaltreat',85,'y'),'pepsi');

insert into menu values(12, 'shevbhji', ICECREAM_TYPE(3, 'pista',65,'y'),'mazaa');

insert into menu values(13, 'shevbhji', ICECREAM_TYPE(4, 'bscotch',65,'y'),'coke');

insert into menu values(14, 'paneer', ICECREAM_TYPE(5, 'vanilla',65,'n'),'pepsi');

select m.desert.cost, m.desert.f_name from menu m where menu_no=13;

update menu m set m.desert.cost=75, m.main_course='bhendi' where menu_no=13;

===================================================================
                                             COLLECTIONS
===================================================================
Practice 1                        (nested table)

Create an object type named SKILLS_TYPE with the following subfields

Skill_Id	NUMBER (2)
Skill_Name	VARCHAR2(20)
Skill_rating	NUMBER (2)
 

Skill Rating can be between – 1 to 10.

•	Create a nested table type SKILL_TAB_TYPE of the above mentioned SKILLS_TYPE.

Solution:

create or replace type SKILLS_TYPE as object 
(skill_id number(2),
 skill_name varchar2(20),
 skill_rating number(2));





=====================================================================
Practice 2

A.	Create an object type CUST_TAB with below attributes
-	Cust_id
-	Cust_Name
-	Plan_Name
B.	Create suitable collection type CUST_DETAILS of CUST_TAB type.
One customer may have many plans .

C.	Create a table Cust_Tab_details as follows :

Columname                            	Constraint  	Datatype
Srno                          	Primary Key            	  Number(10)
Cust_Info                      	 	             CUST_DETAILS
Cust_number	 	                                Number(10)
		                             
D.	 Insert 2 rows in the above table 
Atleast 2 CUST_TAB entries per srno.
E.	Write the select query to display Sr.no and Cust_info from cust_tab_detail table
Note : Write SQL select command not the procedure.
	
Solution:

create or replace type CUST_TAB as object
( cust_id number(2),
  cust_name varchar2(20),
  plan_name varchar2(20));

create type CUST_DETAILS as varray(2) of CUST_TAB;

create table cus_tab
(srno number(10) primary key,
cust_info CUST_DETAILS,
cust_number number(10));

insert into cus_tab values(11,CUST_DETAILS(CUST_TAB(11, 'aish','aaa'), CUST_TAB(12,'ash','uup')),12);

insert into cus_tab values(12,CUST_DETAILS(CUST_TAB(21, 'arch','ccc'), CUST_TAB(90,'hhh','aap')),19);

select  c.srno, c.cust_info from cus_tab c ;

=====================================================================
Practice 3


•	Create a nested table type SKILL_TAB_TYPE of the above mentioned SKILL_TYPE type.

•	Create a table EMPMAIN with the following structure:

Emp_No	NUMBER (4)	PRIMARY KEY
Emp_Name	CHAR (30)	
All_Skills	SKILL_TAB_TYPE	

     Give appropriate names for the corresponding storage tables
•	Insert the following record in the table EMPMAIN. 
Example:
Emp_No	Emp_Name	All_Skills
1001	Aman Dev	101	Design	9
201	Code	10
301	Test	8


•	Insert 2-3 more records in EMPMAIN.
•	Update the Skill Rating for Aman for Skill 301 to 9. (Use TABLE CLAUSE).
•	Delete all the records where Skill Name is Null.
•	Create a procedure named ADD_SKILL that will accept Emp_No  and skill details as parameters and add the skill details to the corresponding record from the EMPMAIN table. The procedure should handle all the probable errors by displaying the appropriate error messages on the screen.
•	Give a call to ADD_SKILL from an anonymous PL/SQL block

Solution:

=====================================================================
Practice 4

Create an object type VEHICLE_TYPE to record the vehicle details owned by an employee.  VEHICLE_TYPE  has the following design :


Vehicle_No	VARCHAR2(12)
Vehicle_Type	CHAR(1)  
(T for two wheeler and F for four wheeler)
Monthly_Expense	NUMBER(7)


•	Create a varray named VEHICLE_ARR of VEHICLE_TYPE that can store max of 3 vehicle details for each employee.

•	Create a table EMP_VARRAY with the following design :

Emp_No	NUMBER (4)	PRIMARY KEY
Emp_Name	VARCHAR2 (30)	
vehicleList	VEHICLE_ARR	

•	Add two relevant records in the table with only one vehicleList member for each emp_no.

•	Write a procedure named ADD_VEHICLE_DETAILS that accepts Emp_no and vehicle details and adds the vehicle details for the corresponding Emp_no in the EMP_VARRAY table. The procedure should handle all the probable errors by displaying the appropriate error messages on the screen.

•	Give a call to ADD_VEHICLE_DETAILS from an anonymous PL/SQL block


Solution:

create or replace type VEHICLE_TYPE as object 
(vehicle_no varchar2(12),
 vehicle_type char(1),
 monthly_expense number(7));

create type VEHICLE_ARR as varray(3) of VEHICLE_TYPE;

create table EMP_VARRAY
(emp_no number(4) primary key,
 emp_name varchar2(30),
 vehiclelist VEHICLE_ARR);

insert into EMP_VARRAY values(1001, 'aishwarya',  VEHICLE_ARR(VEHICLE_TYPE('MH12 4001', 'T',4000)));

insert into EMP_VARRAY values(1002, 'archana',  VEHICLE_ARR(VEHICLE_TYPE('MH19 4001', 'T',6000)));

insert into EMP_VARRAY values(1003, 'rutu',  VEHICLE_ARR(VEHICLE_TYPE('MH18 4001', 'T',7000)));

create or replace procedure ADD_VEHICLE_DETAILS as
emp_no number(4):=&no;
vehicle_no varchar2





=======================================================================================================================
Practice 5

A.	create an object named paper_obj with following attributes:
paperid
     paperName
     publishDate

B.	Create suitable collection type paper_details of paper_obj type.
C.	Create a table Author_Tab as follows :

Columname                            	Constraint  	Datatype
Authorid                        	Primary Key            	  Number(10)
AuthorName                      	 	             Varchar2(20)
Papers	 	                                paper_details
		                             
D.	 Insert 2 rows in the above table 
Atleast 2 paper_obj entries per author.

Solution:

create or replace type paper_obj as object
(paperid number(2),
 papername varchar2(20),
 publishdate );

create type paper_details as varray(2) of paper_obj;

create table EMP_VARRAY
(emp_no number(4) primary key,
 emp_name varchar2(30),
 vehiclelist VEHICLE_ARR);










                                                                                                                                                                                                                                                                                                                                                                       ;





